
/* ---- Globals & variables ---- */
:root{
  /* --floor-h: 300px;   single source of truth for floor height */
  --car-w: 260px;     /* matches #car width */
}
*, *::before, *::after { box-sizing: border-box; }

/* ---- Base ---- */
html, body {
  margin: 0;
  height: 100%;
  background: #111;         /* desktop surround color */
  overflow: hidden;
}

#scene {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;   /* horizontal centering */
  align-items: flex-start;   /* <-- top aligned (kills the black strip) */
}

/* ---- Shaft = camera viewport (JS sets height to visibleFloors*floorHeight) ---- */
#shaft {
  position: relative;
  width: 100%;              /* total width for both lanes; tweak to taste */
  height: 1080px;           /* fallback; JS overwrites with camera height */
  background: #675d49;      /* gold shaft look */
  overflow: hidden;         /* show only N floors at a time */
  /* border-radius: 10px; */
  box-shadow: 0 10px 40px rgba(0,0,0,.35);
  display: grid;            /* two lanes: left = car, right = floors */
  grid-template-columns: var(--car-w) 1fr; /* car lane fixed, floors get the rest */
}

/* Optional top/bottom fades
/* #shaft::before, #shaft::after {
  content: "";
  position: absolute; left: 0; width: 100%; height: 64px; z-index: 5;
  pointer-events: none;
}
#shaft::before { top: 0;    background: linear-gradient(to bottom, rgba(0,0,0,.25), rgba(0,0,0,0)); }
#shaft::after  { bottom: 0; background: linear-gradient(to top,    rgba(0,0,0,.25), rgba(0,0,0,0)); } */ 

/* ---- Lanes ---- */
.lane {
  position: relative;
  height: 100%;
}
.lane-car {
  display: grid;
  place-items: center;      /* keep car centered vertically & horizontally in the car lane */
}
.lane-floors {
  position: relative;
  overflow: hidden;         /* camera for floors */
  /* Helps hide any rare hairlines better than gold if they ever appear */
  background: #000;
  border-left: #111 solid 5px;   /* shaft divider */
}

/* ---- Tower of floors (this is what JS moves with translateY) ---- */
#tower {
  position: absolute;
  left: 0;
  right: 0;
  top: -1px;      /* <-- extend past the top edge */
  bottom: -1px;   /* <-- and past the bottom edge */
  transform: translate3d(0,0,0);
  will-change: transform;
  backface-visibility: hidden;
  font-size: 0;
  line-height: 0;
}

/* ---- Floors ---- */
.floor {
  position: relative;
  width: 100%;
  height: var(--floor-h);   /* kept in sync by JS via CSS variable */
  display: block;
  margin: 0;
  overflow: hidden;
}

/* 1px overlap seam-killer to hide sub-pixel gaps at non-100% zoom */
.floor + .floor { margin-top: -1px; }

.floor img.bg {
  width: 100%;
  height: 100%;
  object-fit: cover;        /* use your full floor art */
  display: block;           /* removes inline-img gap */
}

/* Waiting queue strip along the bottom of each floor */
.queue {
  position: absolute;
  left: 0; right: 0; bottom: 0;
  display: flex; gap: 8px; align-items: flex-end;
  padding: 8px;
  pointer-events: none;     /* wallpaper doesnâ€™t need mouse */
}

/* ---- Car & riders (doors removed) ---- */
#car {
  position: relative;
  left: 20%;
  /* transform: translateX(-55%); */
  width: var(--car-w);        /* ~scaled width of your car art */
  height: calc(var(--floor-h) + 40px);             /* fits nicely in one floor slot (360px) */
  pointer-events: none;
}

#car .carBody {
  position: absolute;
  bottom: 0;
  height: 100%;        /* scale car body by height */
  width: 86%;         /* preserve aspect ratio */
}

#car .operator {
  position: absolute;
  left: 20px; bottom: 40px; /* place to taste relative to your car art */
  width: 60px; height: auto;
}

#car .riders {
  position: absolute;
  right: 18px; bottom: 28px;     /* cluster riders inside the car */
  display: flex; gap: 6px; align-items: flex-end;
}

.person {
  width: 56px; height: auto;     /* default rider size; tweak for your art */
  transform: translateZ(0);
}
